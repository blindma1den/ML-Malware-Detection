import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

# Ejemplo de un conjunto de datos con características de malware en un entorno empresarial
data = {
    'Tráfico de Red Anómalo': [1, 0, 1, 0, 1, 0, 1, 0],
    'Uso de CPU Elevado': [0, 1, 0, 1, 0, 1, 0, 1],
    'Eventos de Seguridad Inusuales': [1, 0, 1, 0, 1, 0, 1, 0],
    'Malware Detectado': [1, 0, 1, 0, 1, 0, 1, 0]
}

df = pd.DataFrame(data)

# Dividir el conjunto de datos en características (X) y etiquetas (y)
X = df.drop('Malware Detectado', axis=1)
y = df['Malware Detectado']

# Dividir los datos en conjuntos de entrenamiento y prueba
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Crear un modelo de clasificación (por ejemplo, Random Forest)
model = RandomForestClassifier()

# Entrenar el modelo
model.fit(X_train, y_train)

# Realizar predicciones en el conjunto de prueba
y_pred = model.predict(X_test)

# Evaluar el rendimiento del modelo
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)

print("Exactitud:", accuracy)
print("Informe de clasificación:")
print(report)
